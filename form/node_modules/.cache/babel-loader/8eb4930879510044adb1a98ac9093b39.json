{"ast":null,"code":"var _jsxFileName = \"D:\\\\Traineeing ReactJs\\\\form\\\\src\\\\Components\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport countries from \"./countries\";\nimport './Form.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [lname, setLname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [acceptedTerms, setAcceptedTerms] = useState(false);\n\n  const handleSubmit = event => {\n    console.log(`\n        FirstName:${name}\n        LastName:${lname}\n        Email: ${email}\n        Password: ${password}\n        Country: ${country}\n        Accepted Terms: ${acceptedTerms}\n      `);\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"First Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"firstname\",\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Last Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"lastname\",\n        type: \"text\",\n        value: lname,\n        onChange: e => setLname(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Country:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"country\",\n        value: country,\n        onChange: e => setCountry(e.target.value),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {}, \"\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), countries.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: country\n        }, country, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"acceptedTerms\",\n        type: \"checkbox\",\n        onChange: e => setAcceptedTerms(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), \"I accept the terms of service\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gradient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"8RwqKDCIJ0ka5iwjef+uc1kOD98=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["D:/Traineeing ReactJs/form/src/Components/Form.js"],"names":["React","useState","countries","Form","name","setName","lname","setLname","email","setEmail","password","setPassword","country","setCountry","acceptedTerms","setAcceptedTerms","handleSubmit","event","console","log","preventDefault","e","target","value","map"],"mappings":"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","sourcesContent":["import React,{useState} from \"react\";\r\nimport countries from \"./countries\";\r\nimport './Form.css';\r\n\r\nconst Form = () => {\r\n\r\n    const [name,setName]= useState(\"\");\r\n    const [lname,setLname]= useState(\"\");\r\n    const [email, setEmail] =useState(\"\");\r\n    const [password, setPassword] =useState(\"\");\r\n    const [country, setCountry] =useState(\"\");\r\n    const [acceptedTerms, setAcceptedTerms] =useState(false);\r\n\r\n  \r\n    const handleSubmit = (event) => {\r\n      console.log(`\r\n        FirstName:${name}\r\n        LastName:${lname}\r\n        Email: ${email}\r\n        Password: ${password}\r\n        Country: ${country}\r\n        Accepted Terms: ${acceptedTerms}\r\n      `);\r\n  \r\n      event.preventDefault();\r\n    }\r\n  \r\n\r\n\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h1>Create Account</h1>\r\n\r\n            <label>\r\n                First Name:\r\n                <input \r\n                    name=\"firstname\"\r\n                    type=\"text\"\r\n                    value={name}\r\n                    onChange={e=>setName(e.target.value)}\r\n                />\r\n            </label>\r\n            <label>\r\n                Last Name:\r\n                <input \r\n                    name=\"lastname\"\r\n                    type=\"text\"\r\n                    value={lname}\r\n                    onChange={e=>setLname(e.target.value)}\r\n                />\r\n            </label>\r\n\r\n            <label>\r\n                Email:\r\n                <input\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={e => setEmail(e.target.value)}\r\n                    required />\r\n            </label>\r\n\r\n            <label>\r\n                Password:\r\n                <input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={e => setPassword(e.target.value)}\r\n                    required />\r\n            </label>\r\n\r\n            <label>\r\n                Country:\r\n                <select\r\n                    name=\"country\"\r\n                    value={country}\r\n                    onChange={e => setCountry(e.target.value)}\r\n                    required>\r\n                    <option key=\"\"></option>\r\n                    {countries.map(country => (\r\n                        <option key={country}>{country}</option>\r\n                    ))}\r\n                </select>\r\n            </label>\r\n\r\n            <label>\r\n                <input\r\n                    name=\"acceptedTerms\"\r\n                    type=\"checkbox\"\r\n                    onChange={e => setAcceptedTerms(e.target.value)}\r\n                    required />\r\n                I accept the terms of service\r\n            </label>\r\n\r\n                        <div className=\"box\">\r\n                            <div className=\"btn\">\r\n                                <button>Submit</button>\r\n                                <div className=\"bg\"></div>\r\n                                <div className=\"bg-gradient\"></div>\r\n                            </div>\r\n                        </div>\r\n\r\n        </form>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}